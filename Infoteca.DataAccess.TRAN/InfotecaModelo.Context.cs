//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Infoteca.DataAccess.TRAN
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class InfotecaEntities : DbContext
    {
        public InfotecaEntities()
            : base("name=InfotecaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<TInfoteca_Bitacora> TInfoteca_Bitacora { get; set; }
        public virtual DbSet<TInfoteca_Fuente> TInfoteca_Fuente { get; set; }
        public virtual DbSet<TInfoteca_Imagen> TInfoteca_Imagen { get; set; }
        public virtual DbSet<TInfoteca_Mensaje> TInfoteca_Mensaje { get; set; }
        public virtual DbSet<TInfoteca_Noticia> TInfoteca_Noticia { get; set; }
        public virtual DbSet<TInfoteca_Noticia_Imagen> TInfoteca_Noticia_Imagen { get; set; }
        public virtual DbSet<TInfoteca_Noticia_Juridica> TInfoteca_Noticia_Juridica { get; set; }
        public virtual DbSet<TInfoteca_Noticia_Persona> TInfoteca_Noticia_Persona { get; set; }
        public virtual DbSet<TInfoteca_Noticia_Propiedad> TInfoteca_Noticia_Propiedad { get; set; }
        public virtual DbSet<TInfoteca_Noticia_Vehiculo> TInfoteca_Noticia_Vehiculo { get; set; }
        public virtual DbSet<TInfoteca_Persona> TInfoteca_Persona { get; set; }
        public virtual DbSet<TInfoteca_Persona_Juridica> TInfoteca_Persona_Juridica { get; set; }
        public virtual DbSet<TInfoteca_Propiedad> TInfoteca_Propiedad { get; set; }
        public virtual DbSet<TInfoteca_Tipo_Delito> TInfoteca_Tipo_Delito { get; set; }
        public virtual DbSet<TInfoteca_Tipo_Fuente> TInfoteca_Tipo_Fuente { get; set; }
        public virtual DbSet<TInfoteca_Usuario> TInfoteca_Usuario { get; set; }
        public virtual DbSet<TInfoteca_Vehiculo> TInfoteca_Vehiculo { get; set; }
    
        [DbFunction("InfotecaEntities", "splitstring")]
        public virtual IQueryable<splitstring_Result> splitstring(string stringToSplit)
        {
            var stringToSplitParameter = stringToSplit != null ?
                new ObjectParameter("stringToSplit", stringToSplit) :
                new ObjectParameter("stringToSplit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<splitstring_Result>("[InfotecaEntities].[splitstring](@stringToSplit)", stringToSplitParameter);
        }
    
        public virtual ObjectResult<PInfoteca_BuscarNoticiaPorFechas_Result> PInfoteca_BuscarNoticiaPorFechas(Nullable<System.DateTime> fecha_inicio, Nullable<System.DateTime> fecha_fin)
        {
            var fecha_inicioParameter = fecha_inicio.HasValue ?
                new ObjectParameter("fecha_inicio", fecha_inicio) :
                new ObjectParameter("fecha_inicio", typeof(System.DateTime));
    
            var fecha_finParameter = fecha_fin.HasValue ?
                new ObjectParameter("fecha_fin", fecha_fin) :
                new ObjectParameter("fecha_fin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PInfoteca_BuscarNoticiaPorFechas_Result>("PInfoteca_BuscarNoticiaPorFechas", fecha_inicioParameter, fecha_finParameter);
        }
    
        public virtual ObjectResult<PInfoteca_BuscarNoticiaPorPalabrasClave_Result> PInfoteca_BuscarNoticiaPorPalabrasClave(string tag)
        {
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PInfoteca_BuscarNoticiaPorPalabrasClave_Result>("PInfoteca_BuscarNoticiaPorPalabrasClave", tagParameter);
        }
    }
}
